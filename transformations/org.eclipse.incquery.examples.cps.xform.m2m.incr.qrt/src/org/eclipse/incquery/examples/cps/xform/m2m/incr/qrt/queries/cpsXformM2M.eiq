package org.eclipse.incquery.examples.cps.xform.m2m.incr.qrt.queries

import "http://org.eclipse.incquery/model/cps"
import "http://org.eclipse.incquery/model/deployment"
import "http://org.eclipse.incquery/model/cps-traceability"

pattern mappedCPS(cps2dep, cps, deployment) {
	CPSToDeployment.cps(cps2dep, cps);
	CPSToDeployment.deployment(cps2dep, deployment);
}

pattern cps2depTrace(cps2dep, trace, cpsElement, depElement) {
	CPSToDeployment.traces(cps2dep, trace);
	CPS2DeplyomentTrace.cpsElements(trace, cpsElement);
	CPS2DeplyomentTrace.deploymentElements(trace, depElement);
}

pattern hostInstance(hostInstance) {
	HostInstance(hostInstance);
}

pattern applicationInstance(appType, appInstance){
	HostInstance.applications(_, appInstance);
	ApplicationType.instances(appType, appInstance);
}

pattern stateMachine(appInstance, stateMachine) {
	find applicationInstance(appType, appInstance);
	ApplicationType.behavior(appType, stateMachine);
}

pattern state(appInstance, stateMachine, state) {
	find stateMachine(appInstance, stateMachine);
	StateMachine.states(stateMachine, state);
}

pattern transition(appInstance, srcState, targetState, transition) {
	find state(appInstance, stateMachine, srcState);
	State.outgoingTransitions(srcState, transition);
	Transition.targetState(transition, targetState);
	StateMachine.states(stateMachine, targetState);
}

pattern depBehaviorsStateAndTransitions(depBehavior, depState, depTransition) {
	DeploymentBehavior.states(depBehavior, depState);
	DeploymentBehavior.transitions(depBehavior, depTransition);
}

pattern allocatedDeploymentApplication(depHost, depApp) {
	DeploymentHost.applications(depHost, depApp);
}